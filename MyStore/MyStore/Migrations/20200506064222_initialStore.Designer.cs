// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyStore;

namespace MyStore.Migrations
{
    [DbContext(typeof(DbStoreContext))]
    [Migration("20200506064222_initialStore")]
    partial class initialStore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.3.20181.2");

            modelBuilder.Entity("MyStore.Cust", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cell")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lname")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("Zipcode")
                        .HasColumnType("TEXT");

                    b.HasKey("CustId");

                    b.ToTable("Cust");
                });

            modelBuilder.Entity("MyStore.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LocationStoreLocationID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventoryID");

                    b.HasIndex("LocationStoreLocationID");

                    b.HasIndex("ProductID");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("MyStore.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrderID1")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Productid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Storeid")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderID");

                    b.HasIndex("OrderID1");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("MyStore.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoreID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MyStore.StoreLocation", b =>
                {
                    b.Property<int>("StoreLocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.HasKey("StoreLocationID");

                    b.ToTable("StoreLocation");
                });

            modelBuilder.Entity("MyStore.Inventory", b =>
                {
                    b.HasOne("MyStore.StoreLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationStoreLocationID");

                    b.HasOne("MyStore.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID");
                });

            modelBuilder.Entity("MyStore.Order", b =>
                {
                    b.HasOne("MyStore.Order", null)
                        .WithMany("Cart")
                        .HasForeignKey("OrderID1");
                });
#pragma warning restore 612, 618
        }
    }
}
